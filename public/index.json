[{"categories":["USS"],"content":" I recently installed IBM Z Open Automation Utilities and Python on z/OS and learned a new command I haven‚Äôt or needed to use before. The chtag command for character encoding for EBCDIC. After editing some Helloworld.py file using vi editor I recevied the follow error when I try to run the python code. /home/#\u003epython hello.py\rSyntaxError: Non-UTF-8 code starting with '\\x97' I needed to change the codeset to IBM-1047 for python to run correctly on USS z/OS. Before the change: /home/#\u003echtag -p hello.py m IBM-1047 T=off hello.py I issued chtag -tc 1047 hello.py to correct the issue. /home/#\u003echtag -p hello.py t IBM-1047 T=on hello.py and now the hello.py works as expected. /home/#\u003epython hello.py Hello World! NOTE: Using the ls -T will provide the same results as the chtag -p command used above ","date":"2022-12-06","objectID":"/posts/chtag_post/:0:0","tags":["z/OS","UNIX","Python","code page"],"title":"chtag - Character Encoding","uri":"/posts/chtag_post/"},{"categories":["USS"],"content":" Links I used to install ZOAU using pax: https://www.ibm.com/docs/en/zoau/1.2.x?topic=installing-configuring-zoau The IBM Open Enterprise SDK Python: https://www.ibm.com/products/open-enterprise-python-zos https://www.ibm.com/docs/en/python-zos/3.9?topic=configuration-installing-configuring-pax-edition ","date":"2022-12-06","objectID":"/posts/chtag_post/:0:1","tags":["z/OS","UNIX","Python","code page"],"title":"chtag - Character Encoding","uri":"/posts/chtag_post/"},{"categories":["Mainframe"],"content":" A handy operator command to check syntax to a BPXPRMxx parm member. After making some mount point changes recenly I issused the command SETOMVS SYNTAXCHECK=(P3) Where P3 is the member in SYS1.PARMLIB that was changed (i.e BPXPRMP3) IBM link BPXPRMxx syntax checking Another useful command D OMVS,MF Will display information about the last 10 or less mount or move failures IBM link Displaying z/OS UNIX Status ","date":"2022-04-09","objectID":"/posts/setomvs_post/:0:0","tags":["z/OS","USS","BPX"],"title":"Checking BPXPRM syntax","uri":"/posts/setomvs_post/"},{"categories":["Mainframe"],"content":" A nice option to the find command that comes in handy is the picture string. I like to use it to find error messages in logs for my normal daily health checks. There are several characters types to choose from. While in the SYSLOG or any output you can enter these command examples to find errors. Example: Go into the SYSLOG and max to bottom of log This example will find any errors starting with the EQQ characters followed by any 4 characters and ending with a letter E going backwards in the SYSLOG. COMMAND ===\u003e FIND P‚ÄôEQQ====E' prev This example will find any messages starting with HASP followed by any 2 digits and ending with 5. Perhaps not useful but you get the idea. COMMAND ===\u003e FIND P‚ÄôHASP##5' prev Some other options types to use. Equal-sign (=) Any character (don‚Äôt care) Not-sign (¬¨) Any non-blank character Period (.) Any non-display (invalid) character Sharp (#) Any numeric character (digit) Minus-sign (-) Any non-numeric character At-sign (@) Any alphabetic character Less-than Any lower case alphabetic character Greater-than Any upper case alphabetic character Dollar-sign ($) Any special character IBM link Using picture strings ","date":"2022-01-11","objectID":"/posts/find-post/:0:0","tags":["z/OS","FIND","SEARCH"],"title":"Find Picture String","uri":"/posts/find-post/"},{"categories":null,"content":"About me and this site I‚Äôm currenly working as a mainframe z/OS administrator and enjoy working and learning on the mainframe platform. I also enjoy working in Linux and Windows enviroment as well and do some develpoment work from time to time. As I discover things of interest I will post them on this blog site which I created. Keeping with learning new things I started this static website using HUGO framework and Githubs Pages as the hosting site and after some github setup this site gets automatically generated and deployed once updates are made. ","date":"2022-01-09","objectID":"/about/:0:1","tags":null,"title":"About","uri":"/about/"},{"categories":["Mainframe"],"content":" Needed to increase the size of a zFS mounted dataset the other day. I will just provide the link to IBM website for the details but instead of duplicating everthing here, but I wasn‚Äôt aware this could be done with the pax command instead of the DFSMS REPRO command. Snippet example from the IBM site //SYSTSIN DD *\rOSHELL /usr/sbin/mount -t ZFS -f PLEX.OLD.AGGR002.LDS0002 +\r/service2 ; +\r/usr/sbin/mount -t ZFS -f PLEX.NEW.AGGR002.LDS0002 /service3 ; +\rcd /service2 ; +\rpax -rwvCMX -p eW . /service3 ;\r/*\r IBM link LARGER dataset ","date":"2022-01-08","objectID":"/posts/zfs_post/:0:0","tags":["z/OS","USS","IDCAMS","PAX"],"title":"zFS Increasing Size","uri":"/posts/zfs_post/"},{"categories":["Mainframe"],"content":" This characters bracket characters [ ] and others that don‚Äôt convert to a readable form was driving me crazy. enter this command when starting a USS session: omvs convert((BPXFX111)) Example, in man pages converts this line: pax √ù-cdEnvz¬®√ù-H|-L¬®√ù-f archive¬® √ù-o type¬® √ù-s substitute¬® ‚Ä¶ √ùpattern ‚Ä¶¬® to this line: pax [-cdEnvz][-H|-L][-f archive] [-o type] [-s substitute] ‚Ä¶ [pattern ‚Ä¶] much easier to read. üëç IBM Link OMVS command ","date":"2022-01-08","objectID":"/posts/omvs_post/:0:0","tags":["z/OS","USS","Code page"],"title":"OMVS Encoding","uri":"/posts/omvs_post/"},{"categories":["Mainframe"],"content":"Display command Another command option for readability, while in ishell: while browsing a file Command ===\u003eDISPLAY CCSID 1047 The DISPLAY command allows you to view data that would not normally be displayed. IBM Link DISPLAY command ","date":"2022-01-08","objectID":"/posts/omvs_post/:0:1","tags":["z/OS","USS","Code page"],"title":"OMVS Encoding","uri":"/posts/omvs_post/"}]